name: CodeCoverage

on:
  push:
    branches: [ AddCodeCoverageAction ]
  pull_request:
    branches: [ AddCodeCoverageAction ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: CI Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Write Readme File
        run: cat CHANGELOG.md >> README.md
      
      # Set environment variables based on the last commit
      - name: Set environment variable "commit-message"
        run: echo "commit-message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
      - name: Display environment variable "commit-message"
        run: echo "commit-message=${{ env.commit-message }}"

      - name: Set environment variable "commit-author"
        run: echo "commit-author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
      - name: Display environment variable "commit-author"
        run: echo "commit-author=${{ env.commit-author }}"

      - name: Set environment variable "is-auto-commit"
        if: env.commit-message == env.CI_COMMIT_MESSAGE && env.commit-author == env.CI_COMMIT_AUTHOR
        run: echo "is-auto-commit=true" >> $GITHUB_ENV
      - name: Display environment variable "is-auto-commit"
        run: echo "is-auto-commit=${{ env.is-auto-commit }}"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[Bot] Update all the things!"
          commit_user_name: ${{ env.CI_COMMIT_AUTHOR }}
          commit_user_email: jeckerl@anexia-it.com
          commit_author: ${{ env.CI_COMMIT_AUTHOR }} <jeckerl@anexia-it.com>

#      - name: Commit & Push changes
#        uses: actions-js/push@AddCodeCoverageAction
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Write to Job Summary
        run: cat README.md >> $GITHUB_STEP_SUMMARY
#
#      - name: Test
#        run: dotnet test --filter Category="GitHub" --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage --settings:"runsettings.runsettings"
#
#      - name: Code Coverage Report
#        uses: irongut/CodeCoverageSummary@v1.3.0
#        with:
#          filename: coverage/**/coverage.cobertura.xml
#          badge: true
#          fail_below_min: true
#          format: markdown
#          hide_branch_rate: false
#          hide_complexity: true
#          indicators: true
#          output: both
#          thresholds: '20 60'
#
#      - name: Add Coverage PR Comment
#        uses: marocchino/sticky-pull-request-comment@v2
#        #if: github.event_name == 'pull_request'
#        with:
#          recreate: true
#          path: code-coverage-results.md
#
##      - name: Write to Job Summary
##        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
#
#      - name: Write Readme File
#        run: cat code-coverage-results.md >> README.md
#
#      - name: Commit & Push changes
#        uses: actions-js/push@AddCodeCoverageAction
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Write to Job Summary
#        run: cat README.md >> $GITHUB_STEP_SUMMARY